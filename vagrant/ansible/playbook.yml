---
- name: Configuring Vagrant
  hosts: all
  gather_facts: yes
  become: true

  tasks:
    - name: Changing Hostname to 'demo-ops'
      hostname:
        name: demo-ops

    - name: Adding new user 'demo'
      user:
        name: demo
        create_home: yes
        shell: /bin/bash

    - name: Enable User Limits
      lineinfile:
        path: /etc/pam.d/common-session
        state: present
        insertafter: EOF
        line: 'session required pam_limits.so'

    - name: Configuring User Limits
      blockinfile:
        dest: /etc/security/limits.conf
        state: present
        insertafter: EOF
        marker: ""
        content: |
          * soft nofile 65535
          * hard nofile 65535

          root soft nofile 65535
          root hard nofile 65535

          * soft core unlimited
          * hard core unlimited

          root soft core unlimited
          root hard core unlimited

    - name: Configuring sysctl
      sysctl:
        name: '{{ item.key }}'
        value: '{{ item.value }}'
        sysctl_set: yes
        state: present
        reload: yes
        ignoreerrors: yes
      with_dict:
        kernel.core_pattern: /var/core/core_%e_%p_%s_%c_%t
        net.ipv4.ip_local_reserved_ports: 8000
        net.ipv4.tcp_max_syn_backlog: 100000
        net.core.somaxconn: 100000
        net.core.netdev_max_backlog: 100000
        net.ipv4.ip_local_port_range: 1024 65535
        fs.aio-max-nr: 524000
        vm.overcommit_memory: 1

    - name: Creating directory /etc/docker
      file:
        path: /etc/docker/
        state: directory

    - name: Configuring Docker Daemon
      copy:
        content: |
          {
            "live-restore": true,
            "debug": true,
            "log-driver": "json-file",
            "log-opts": {
              "max-size": "10m",
              "max-file": "3",
              "labels": "production_status",
              "env": "os,customer"
            }
          }
        dest: /etc/docker/daemon.json

    - name: Configuring Time Zone to "Asia/Kolkata"
      timezone:
        name: Asia/Kolkata
        hwclock: local

    - name: Removing Any Old Docker Packages
      apt:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent
        purge: yes

    - name: Installing Intermediate Packages
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
        state: latest
        install_recommends: no

    - name: Adding Docker Repository Key
      shell: |
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
        apt-key fingerprint 0EBFCD88
        add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
      args:
        warn: no

    - name: Updating Apt Local Cache
      apt:
        update_cache: yes

    - name: Installing Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose
        state: latest
        install_recommends: no
        
    - name: Deploying 'docker-compose.yml' at '/etc/demo-ops'
      copy:
        src: docker-compose/
        dest: /etc/demo-ops/

    - name: Running docker-compose
      shell:
        docker-compose -f /etc/demo-ops/docker-compose.yml up -d --build
